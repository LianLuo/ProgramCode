@using C1.Web.Mvc.Fluent
@using HW.LabStore.Entity
@model IEnumerable<UserModel>
@{
    ViewBag.Title = "FlexGrid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Scripts/wijmo.style.css")
@Scripts.Render("~/Scripts/WebResources.js")
@Scripts.Render("~/Scripts/wijmo.min.js")
<script type="text/javascript">
    function userGridItemFormatter(panel, r, c, cell) {
        
    }

    function getErrors(item,property) {
        switch (property) {
            case "UserName":
                return item[property] == null || item[property] == undefined
                    ? 'Invalid UserName,Please input username '
                    : null;
        }
        return null;
    }
</script>
<div>
    @(Html.C1().CollectionViewService().Id("userGridValidation")
      .GetError("getErrors")
      .Bind(Model)
      .Update(@Url.Action("UpdateUserInfo"))
      .Create(@Url.Action("CreateUserInfo"))
      .Delete(@Url.Action("DeleteUserInfo"))
    )
    

    @(Html.C1().FlexGrid<UserModel>()
          .AutoGenerateColumns(false)
          .ShowGroupPanel(s => s.MaxGroups(Convert.ToInt32(5)).Placeholder("Drag columns here to create groups")) // grag to group
          .ItemsSourceId("userGridValidation")
          //.Height("400px")
          .CssStyle("height","400px")
          .CssClass("grid")
          .Id("userGrid")
          .Columns(columns =>
          {
              columns.Add(column => column.Binding("ID").Header("Id").Visible(true));
              columns.Add(column => column.Binding("UserName").Header("User Name"));
              columns.Add(column => column.Binding("Gender").Header("Gender"));
              columns.Add(column => column.Binding("Age").Header("User Age"));
              columns.Add(column => column.Binding("Email").Header("User Email"));
              columns.Add(column => column.Binding("Tel").Header("User Telphone"));
              columns.Add(column => column.Binding("QQ").Header("User lync"));
              columns.Add(column => column.Binding("Birthday").Header("Birthday"));//.Format("dd-MMM-yyyy")
              columns.Add(column => column.Binding("InTime").Header("In Company Date"));//.Format("dd-MMM-yyyy")
          }).ItemFormatter("userGridItemFormatter")
          )
</div>

